{"version":3,"sources":["components/FilterPanel.js","components/AlbumCard.js","components/PlaylistsResult.js","components/filterOptions/locale.js","components/filterOptions/country.js","components/NavigationBar.js","components/SingleSelect.js","components/NumberInput.js","services/RequestService.js","services/LocalStorageService.js","components/Spinner.js","components/ErrorModal.js","components/FeaturedPlaylist.js","components/Login.js","App.js","serviceWorker.js","index.js","messages/messages.js","logo.svg"],"names":["FilterPanel","messages","this","props","intl","react_default","a","createElement","reactstrap_es","className","children","React","Component","injectIntl","AlbumCard","top","width","src","photo","albumName","PlaylistsResult","playlists","length","react_photo_gallery_es","photos","ImageComponent","color","react_fontawesome_index_es","icon","faInfoCircle","locale","value","name","country","NavigationBar","dark","expand","href","navbar","faGithub","size","SingleSelect","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","undefined","onChangeValue","bind","assertThisInitialized","option","setState","onChange","react_select_esm","getOptionLabel","getOptionValue","options","isMulti","placeholder","isClearable","NumberInput","event","target","min","max","type","resquestService","searchJSON","accessToken","queryParameters","buildQueryParameters","axios","get","concat","headers","Authorization","then","response","data","console","log","queryString","stringify","localStorageService","LocalStorageService","tokenKey","token","localStorage","setItem","getItem","removeItem","Spinner","faSpinner","spin","ErrorModal","isOpen","errorMSG","FeaturedPlaylist","timestamp","limit","offset","loading","validToken","errorModal","updateSearchJSON","fecthPlaylists","_this2","window","history","pushState","refreshPlaylists","setInterval","clearInterval","removeToken","filterName","contentId","components_ErrorModal","_this3","getToken","requestService","getPlaylists","result","resultPlaylist","items","processPlaylist","catch","error","createErrorModal","rawPlayList","_","forEach","item","push","images","url","height","_this4","fluid","components_FilterPanel","SingleSelect_SingleSelect","DateTime_default","inputProps","moment","format","NumberInput_NumberInput","components_PlaylistsResult","Spinner_Spinner","Login","xs","onClick","location","process","App","hash","queryParam","parse","component","Login_Login","access_token","storeToken","components_FeaturedPlaylist","Boolean","hostname","match","addLocaleData","toConsumableArray","pt","en","language","navigator","message","pt-BR","filter_panel.title","filter_panel.filter.locale","filter_panel.filter.country","filter_panel.filter.date","filter_panel.filter.size","filter_panel.filter.page","error_modal.title","error_modal.errorRequest","error_modal.expireToken","playlist_result.empty","en-US","ReactDOM","render","index_es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.df3c7dd3.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    intlShape,\n    injectIntl,\n} from 'react-intl';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from 'reactstrap';\n\nclass FilterPanel extends React.Component{\n\n    render(){\n        const {messages} = this.props.intl;\n        return (\n            <Card className=\"mt-2 mx-2\">\n                <CardHeader>{messages[\"filter_panel.title\"]}</CardHeader>\n                <CardBody>\n                    {this.props.children}\n                </CardBody>\n            </Card>\n        )\n    }\n\n}\n\nFilterPanel.propTypes = {\n    intl: intlShape.isRequired,\n};\n\nexport default injectIntl(FilterPanel)","import React from 'react';\nimport {\n    Card,\n    CardImg,\n    CardTitle,\n    CardBody,\n} from 'reactstrap';\n\nexport default class AlbumCard extends React.Component{\n\n    render(){\n        return (\n            <Card className=\"mx-1 my-1\">\n                <CardImg top width=\"100%\" src={this.props.photo.src}  />\n                <CardBody>\n                    <CardTitle>{this.props.photo.albumName}</CardTitle>\n                </CardBody>\n            </Card>\n        )\n    }\n}","import React from 'react';\nimport Gallery from 'react-photo-gallery';\nimport AlbumCard from './AlbumCard'\nimport {\n    intlShape,\n    injectIntl,\n} from 'react-intl';\nimport {\n    Alert\n} from 'reactstrap'\nimport {\n    faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons/index\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass PlaylistsResult extends React.Component{\n\n    render(){\n        const {playlists} = this.props;\n        const {messages} = this.props.intl;\n        return (\n            <div>\n                {playlists && playlists.length >0 ? \n                <Gallery\n                    photos={playlists}\n                    ImageComponent={AlbumCard}/>\n                : \n                <Alert color=\"secondary\" className=\"mx-5 mt-5\">\n                    <FontAwesomeIcon icon={faInfoCircle} /> { messages[\"playlist_result.empty\"]}\n                </Alert>}\n            </div>\n        )\n    }\n\n}\n\nPlaylistsResult.propTypes = {\n    intl: intlShape.isRequired,\n};\n\nexport default injectIntl(PlaylistsResult)","export default [\n    {\n        value: \"en_AU\",\n        name: \"en_AU\"\n    },\n    {\n        value: \"de_DE\",\n        name: \"de_DE \"\n    },\n    {\n        value: \"pt_BR\",\n        name: \"pt_BR\"\n    },\n    {\n        value: \"fr_FR\",\n        name: \"fr_FR\"\n    },\n    {\n        value: \"en_US\",\n        name: \"en_US\"\n    },\n    {\n        value: \"es_AR\",\n        name: \"es_AR\"\n    }\n]","export default [\n    {\n        value: \"AU\",\n        name: \"Australia\"\n    },\n    {\n        value: \"DE\",\n        name: \"Alemanhã\"\n    },\n    {\n        value: \"BR\",\n        name: \"Brasil\"\n    },\n    {\n        value: \"PT\",\n        name: \"Portugal\"\n    },\n    {\n        value: \"en_US\",\n        name: \"EUA\"\n    },\n    {\n        value: \"RU\",\n        name: \"Rússia\"\n    }\n]","import React from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\nimport {\n    faGithub\n} from \"@fortawesome/free-brands-svg-icons/index\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function NavigationBar(props){\n\n    return (\n        <Navbar color=\"primary\" dark expand=\"md\">\n            <NavbarBrand href=\"#\">Spotifood</NavbarBrand>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://github.com/hashiCode/ifood-frontend-test\">\n                    <FontAwesomeIcon icon={faGithub} size=\"lg\"/>\n                </NavLink>\n              </NavItem>\n              </Nav>\n        </Navbar>\n    )\n}","import React from 'react';\nimport Select from 'react-select'\n\nexport default class SingleSelect extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value : undefined\n        }\n        this.onChangeValue = this.onChangeValue.bind(this);\n    }\n\n    getOptionLabel(option){\n        return option.name;\n    }\n    getOptionValue(option){\n        return option.value;\n    }\n\n    onChangeValue(option){\n        let value = option ? option.value : null;\n        this.setState({value})\n        this.props.onChange(value);\n    }\n\n    render(){\n        return(\n            <Select getOptionLabel={this.getOptionLabel} getOptionValue={this.getOptionValue}\n                    options={this.props.options} isMulti={false} placeholder={this.props.placeholder}\n                    onChange ={this.onChangeValue} value={this.props.value} isClearable={true}/>\n            )\n    }\n}","import React from 'react';\nimport {Input} from 'reactstrap';\n\nexport default class NumberInput extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value : '',\n        }\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(event){\n        let value = event.target.value;\n        if(!value ||\n            ((this.props.min && value<this.props.min) || (this.props.max && value>this.props.max))) {\n            value='';\n        }\n        this.setState({value});\n\n        //failsafe when empty\n        if(value){\n            this.props.onChange(value);\n        }else{\n            this.props.onChange(undefined);\n        }\n    }\n\n    render(){\n        return (\n            <Input type=\"number\" placeholder={this.props.placeholder}\n                    min={this.props.min} max={this.props.max} onChange={this.onChange} value={this.state.value} />\n        )\n    }\n\n}","import axios from 'axios';\nimport queryString from 'query-string'\n\nclass RequestService {\n\n    getPlaylists(searchJSON, accessToken){\n        let queryParameters = this.buildQueryParameters(searchJSON);\n        return axios.get(`https://api.spotify.com/v1/browse/featured-playlists?${queryParameters}`, {\n            headers : {\n                \"Authorization\" : `Bearer ${accessToken}`\n            }\n        }).then(response => response.data)\n    }\n\n    buildQueryParameters(searchJSON){\n        console.log(queryString.stringify(searchJSON));\n        return queryString.stringify(searchJSON);\n    }\n}\n\nconst resquestService = new RequestService();\n\nexport default resquestService;","class LocalStorageService{\n    \n    constructor(){\n        this.tokenKey=\"auth_token\"\n    }\n\n    storeToken(token){\n        localStorage.setItem(this.tokenKey, token);\n    }\n\n    getToken(){\n        return localStorage.getItem(this.tokenKey);\n    }\n\n    removeToken(){\n        localStorage.removeItem(this.tokenKey);\n    }\n\n}\n\nconst localStorageService = new LocalStorageService();\n\nexport default localStorageService;","import React from 'react';\nimport {\n    faSpinner,\n} from \"@fortawesome/free-solid-svg-icons/index\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './css/Spinner.scss'\n\nexport default function Spinner(){\n\n\treturn <div className='pageSpinner'>\n        <FontAwesomeIcon className='pageSpinnerIcon' icon={faSpinner} size=\"3x\" spin />\n    </div>;\n}","import React from 'react'\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n} from 'reactstrap';\nimport {\n    intlShape,\n    injectIntl,\n} from 'react-intl';\nimport './css/ErrorModal.scss'\n\nclass ErrorModal extends React.Component{\n\n    render(){\n        const {messages} = this.props.intl;\n        return <Modal isOpen={true}>\n            <ModalHeader className=\"error-modal-header\">{messages[\"error_modal.title\"]}</ModalHeader>\n            <ModalBody>{this.props.errorMSG}</ModalBody>\n        </Modal>\n    }\n}\n\nErrorModal.propTypes = {\n    intl: intlShape.isRequired,\n};\n\nexport default injectIntl(ErrorModal)","import React from 'react';\nimport FilterPanel from './FilterPanel';\nimport PlaylistsResult from './PlaylistsResult';\nimport locale from './filterOptions/locale';\nimport country from './filterOptions/country';\nimport {\n    Container,\n    Row,\n    Col,\n} from 'reactstrap';\nimport {\n    intlShape,\n    injectIntl,\n} from 'react-intl';\nimport NavBar from './NavigationBar'\nimport SingleSelect from './SingleSelect';\nimport DateTime from 'react-datetime';\nimport NumberInput from './NumberInput'\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment';\nimport requestService from '../services/RequestService';\nimport _ from 'lodash'\nimport localStorageService from '../services/LocalStorageService'\nimport Spinner from './Spinner';\nimport ErrorModal from './ErrorModal'\n\nclass FeaturedPlaylist extends React.Component{\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            searchJSON : {\n                locale : undefined,\n                country : undefined,\n                timestamp : undefined,\n                limit : undefined,\n                offset : undefined,\n            },\n            playlists : undefined,\n            loading : false,\n            validToken : true,\n            errorModal : undefined,\n        }\n        this.updateSearchJSON = this.updateSearchJSON.bind(this);\n        this.fecthPlaylists = this.fecthPlaylists.bind(this);\n    }\n\n    componentDidMount(){\n        window.history.pushState(null, '', '/')\n        this.refreshPlaylists = setInterval(() =>  this.fecthPlaylists(), 30000);\n        this.fecthPlaylists()\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.refreshPlaylists)\n        localStorageService.removeToken();\n    }\n\n    updateSearchJSON(filterName, value){\n        let {searchJSON} = this.state;\n        searchJSON[filterName] = value;\n        this.setState({searchJSON});\n        console.log(this.state.searchJSON);\n        this.fecthPlaylists();\n    }\n\n    createErrorModal(contentId){\n        const {messages} = this.props.intl;\n        return <ErrorModal errorMSG={messages[contentId]} />\n    }\n\n    fecthPlaylists(){\n        const token = localStorageService.getToken();\n        if(token && this.state.validToken){\n            this.setState({loading : true})\n            requestService.getPlaylists(this.state.searchJSON, token).then(result => {\n                const resultPlaylist = result.playlists\n                if(resultPlaylist && resultPlaylist.items){\n                    let playlists=this.processPlaylist(resultPlaylist.items);\n                    this.setState({playlists, loading : false});\n                }\n            }).catch(error => {\n                //TODO check for other erros/ refresh token\n                const errorModal = this.createErrorModal(\"error_modal.errorRequest\")\n                this.setState({loading : false, validToken : false, errorModal});\n                clearInterval(this.refreshPlaylists)\n            });\n        }\n        else{\n            const errorModal = this.createErrorModal(\"error_modal.expireToken\")\n            this.setState({validToken : false, errorModal});\n            clearInterval(this.refreshPlaylists)\n        }\n    }\n\n    processPlaylist(rawPlayList){\n        let playlists =[];\n        _.forEach(rawPlayList, item => {\n            playlists.push({\n                src : item.images[0].url,\n                albumName : item.name,\n                width : 300,\n                height : 300\n            })\n        })\n        return playlists;\n    }\n\n    render(){\n        const {messages} = this.props.intl;\n        return (\n        <div>\n            <NavBar />\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <FilterPanel>\n                            <Container>\n                                <Row>\n                                    <Col>\n                                        <SingleSelect placeholder={messages[\"filter_panel.filter.locale\"]} options={locale}\n                                            onChange={value => this.updateSearchJSON('locale', value)}/>\n                                    </Col>\n                                    <Col>\n                                        <SingleSelect placeholder={messages[\"filter_panel.filter.country\"]} options={country}\n                                            onChange={value => this.updateSearchJSON('country', value)}/>\n                                    </Col>\n                                    <Col>\n                                        <DateTime placeholder={messages[\"filter_panel.filter.data\"]} inputProps={{placeholder :messages[\"filter_panel.filter.date\"] }}\n                                            onChange={moment => this.updateSearchJSON(\"timestamp\", moment.format(\"YYYY-MM-DDTHH:mm:ss\"))}/>\n                                    </Col>\n                                    <Col>\n                                        <NumberInput placeholder={messages[\"filter_panel.filter.size\"]} min={1} max={50} onChange={value => this.updateSearchJSON(\"limit\", value)}/>\n                                    </Col>\n                                    <Col>\n                                        <NumberInput placeholder={messages[\"filter_panel.filter.page\"]} min={0} onChange={value => this.updateSearchJSON(\"offset\", value)}/>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </FilterPanel>\n                    </Col>\n                </Row>\n\n                <Row className=\"justify-content-center flex-grow-1\">\n                    <Col>\n                        <PlaylistsResult playlists={this.state.playlists}/>\n                    </Col>\n                </Row>\n            </Container>\n\n            {this.state.loading && <Spinner />}\n            \n            {this.state.errorModal}\n        </div>\n        )\n    }\n}\n\nFeaturedPlaylist.propTypes = {\n    intl: intlShape.isRequired,\n};\n\nexport default injectIntl(FeaturedPlaylist)","import React from 'react'\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Jumbotron\n} from 'reactstrap';\nimport './css/Login.scss'\n\nexport default function Login (props){\n\n    return (\n        <Container className=\"h-100\">\n            <Row className=\"align-items-center h-100\">\n                <Col xs={6} className=\"mx-auto\">\n                    <Jumbotron className=\"text-center \">\n                        <h3 className=\"display-4\">Spotifood</h3>\n                        <Button color=\"primary\" type=\"submit\" size=\"lg\"\n                            onClick={() => window.location=`https://accounts.spotify.com/authorize?response_type=token&client_id=dc93f6595d574d0b8f8b35eba887e41d&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`}>Login</Button>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport FeaturedPlaylist from './components/FeaturedPlaylist'\nimport Login from './components/Login'\nimport queryString from 'query-string'\nimport localStorageService from './services/LocalStorageService'\n\nclass App extends Component {\n\n  render() {\n    //TODO learn some route framework\n    const hash = window.location.hash;\n    let queryParam=queryString.parse(hash);\n    let component= <Login />;\n    if(queryParam.access_token){\n      localStorageService.storeToken(queryParam.access_token);\n      component=<FeaturedPlaylist />;\n    }\n\n    return (\n        component\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    addLocaleData,\n    IntlProvider,\n} from 'react-intl';\nimport pt from 'react-intl/locale-data/pt';\nimport en from 'react-intl/locale-data/en';\nimport localeData from './messages/messages';\n\naddLocaleData([...pt, en]);\nconst language = navigator.language || 'en-US';\nconst message = localeData[language];\n\nReactDOM.render(<IntlProvider locale={language} messages={message}><App /></IntlProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n    \"pt-BR\" : {\n        \"filter_panel.title\" : \"Busca de Playlists\",\n        \"filter_panel.filter.locale\" : \"Língua\",\n        \"filter_panel.filter.country\" : \"País\",\n        \"filter_panel.filter.date\" : \"Data e horário\",\n        \"filter_panel.filter.size\" : \"Quantidade (1-50)\",\n        \"filter_panel.filter.page\" : \"Página\",\n        \"error_modal.title\" : \"Erro\",\n        \"error_modal.errorRequest\" : \"Ocorreu um erro ao obter as playlists. Por favor faça o login novamente.\",\n        \"error_modal.expireToken\" : \"Sessão expirou. Por favor faça o login novamente.\",\n        \"playlist_result.empty\" : \"Nenhuma playlist foi encontrada.\"\n    },\n    \"en-US\" : {\n        \"filter_panel.title\" : \"Playlist Search\",\n        \"filter_panel.filter.locale\" : \"Locale\",\n        \"filter_panel.filter.country\" : \"Country\",\n        \"filter_panel.filter.date\" : \"Date\",\n        \"filter_panel.filter.size\" : \"Limit (1-50)\",\n        \"filter_panel.filter.page\" : \"Page\",\n        \"error_modal.title\" : \"Error\",\n        \"error_modal.errorRequest\" : \"There was an error fetching playlists. Please login again.\",\n        \"error_modal.expireToken\" : \"Expired session. Please login again.\",\n        \"playlist_result.empty\" : \"No playlist were found.\"\n    }\n  }","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}